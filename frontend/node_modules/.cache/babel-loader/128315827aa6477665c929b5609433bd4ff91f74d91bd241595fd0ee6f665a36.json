{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\final\\\\final\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport VotePopup from './VotePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\n// ✅ YouTube Video ID 추출 함수\nconst getYouTubeVideoId = url => {\n  try {\n    const parsedUrl = new URL(url);\n    if (parsedUrl.hostname === \"youtu.be\") {\n      return parsedUrl.pathname.substring(1);\n    }\n    return parsedUrl.searchParams.get(\"v\");\n  } catch (error) {\n    return null;\n  }\n};\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [videoId, setVideoId] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [realScore, setRealScore] = useState(null);\n  const [fakeScore, setFakeScore] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [embedUrl, setEmbedUrl] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const handleUrlChange = e => {\n    const inputUrl = e.target.value;\n    setUrl(inputUrl);\n    const extractedVideoId = getYouTubeVideoId(inputUrl);\n    console.log(\"Extracted Video ID:\", extractedVideoId);\n    setVideoId(extractedVideoId);\n    const updatedUrl = inputUrl.replace('youtube.com/shorts/', 'youtube.com/watch?v=');\n    setEmbedUrl(updatedUrl);\n  };\n  const handlePrediction = async () => {\n    setLoading(true);\n    try {\n      console.log(\"📡 예측 요청 전송:\", {\n        url\n      });\n      const response = await fetch(\"http://localhost:8000/predict/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"✅ 예측 성공:\", data);\n        setPrediction(data.message);\n        setRealScore(data.real_score);\n        setFakeScore(data.fake_score);\n      } else {\n        console.error(\"🚨 API 응답 오류:\", data);\n        setPrediction(`Error: ${data.error || \"Failed to fetch prediction\"}`);\n      }\n    } catch (error) {\n      console.error(\"🚨 서버 오류 발생:\", error);\n      setPrediction(\"Error: Failed to fetch prediction\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ 예측이 완료되고 videoId가 존재하면 자동으로 팝업 띄우기\n  useEffect(() => {\n    if (prediction && videoId) {\n      console.log(\"✅ 예측 완료! 팝업을 띄웁니다.\");\n      setShowPopup(true);\n    }\n  }, [prediction, videoId]);\n  const chartData = {\n    labels: ['Real Video', 'Fake Video'],\n    datasets: [{\n      data: [realScore || 0, fakeScore || 0],\n      backgroundColor: ['#A6DAF4', '#F4A1A7'],\n      borderColor: ['#A6DAF4', '#F4A1A7'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlingn: 'center',\n        margit: '20px 0',\n        color: 'rgb(194, 16, 194)'\n      },\n      children: \"IZREAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: handleUrlChange,\n      placeholder: \"YouTube \\uC601\\uC0C1 URL\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrediction,\n      disabled: loading,\n      children: loading ? '로딩 중...' : '딥페이크 여부 예측'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), embedUrl && videoId && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"100%\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}`,\n      title: \"YouTube video\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 22\n    }, this), realScore !== null && fakeScore !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDC4D \\uC9C4\\uC9DC \\uC601\\uC0C1 \\uC810\\uC218 : \", realScore.toFixed(3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDC4E \\uAC00\\uC9DC \\uC601\\uC0C1 \\uC810\\uC218 : \", fakeScore.toFixed(3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), showPopup && videoId && /*#__PURE__*/_jsxDEV(VotePopup, {\n      videoId: videoId,\n      onClose: () => setShowPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2L84GLgauKtgxRn2b4Rp1wQGhb4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","VotePopup","jsxDEV","_jsxDEV","register","getYouTubeVideoId","url","parsedUrl","URL","hostname","pathname","substring","searchParams","get","error","App","_s","setUrl","videoId","setVideoId","prediction","setPrediction","realScore","setRealScore","fakeScore","setFakeScore","loading","setLoading","embedUrl","setEmbedUrl","showPopup","setShowPopup","handleUrlChange","e","inputUrl","target","value","extractedVideoId","console","log","updatedUrl","replace","handlePrediction","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","real_score","fake_score","chartData","labels","datasets","backgroundColor","borderColor","borderWidth","children","style","textAlingn","margit","color","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","disabled","width","height","src","title","frameBorder","allow","allowFullScreen","toFixed","onClose","_c","$RefreshReg$"],"sources":["C:/projects/final/final/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport VotePopup from './VotePopup';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n// ✅ YouTube Video ID 추출 함수\r\nconst getYouTubeVideoId = (url) => {\r\n  try {\r\n    const parsedUrl = new URL(url);\r\n    if (parsedUrl.hostname === \"youtu.be\") {\r\n      return parsedUrl.pathname.substring(1);\r\n    }\r\n    return parsedUrl.searchParams.get(\"v\");\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const [videoId, setVideoId] = useState(null);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [realScore, setRealScore] = useState(null);\r\n  const [fakeScore, setFakeScore] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [embedUrl, setEmbedUrl] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleUrlChange = (e) => {\r\n    const inputUrl = e.target.value;\r\n    setUrl(inputUrl);\r\n\r\n    const extractedVideoId = getYouTubeVideoId(inputUrl);\r\n    console.log(\"Extracted Video ID:\", extractedVideoId);\r\n    setVideoId(extractedVideoId);\r\n\r\n    const updatedUrl = inputUrl.replace('youtube.com/shorts/', 'youtube.com/watch?v=');\r\n    setEmbedUrl(updatedUrl);\r\n  };\r\n\r\n  const handlePrediction = async () => {\r\n    setLoading(true);\r\n    try {\r\n        console.log(\"📡 예측 요청 전송:\", { url });\r\n\r\n        const response = await fetch(\"http://localhost:8000/predict/\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ url }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n            console.log(\"✅ 예측 성공:\", data);\r\n            setPrediction(data.message);\r\n            setRealScore(data.real_score);\r\n            setFakeScore(data.fake_score);\r\n        } else {\r\n            console.error(\"🚨 API 응답 오류:\", data);\r\n            setPrediction(`Error: ${data.error || \"Failed to fetch prediction\"}`);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"🚨 서버 오류 발생:\", error);\r\n        setPrediction(\"Error: Failed to fetch prediction\");\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n  // ✅ 예측이 완료되고 videoId가 존재하면 자동으로 팝업 띄우기\r\n  useEffect(() => {\r\n    if (prediction && videoId) {\r\n      console.log(\"✅ 예측 완료! 팝업을 띄웁니다.\");\r\n      setShowPopup(true);\r\n    }\r\n  }, [prediction, videoId]);\r\n\r\n  const chartData = {\r\n    labels: ['Real Video', 'Fake Video'],\r\n    datasets: [\r\n      {\r\n        data: [realScore || 0, fakeScore || 0],\r\n        backgroundColor: ['#A6DAF4', '#F4A1A7'],\r\n        borderColor: ['#A6DAF4', '#F4A1A7'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlingn : 'center', margit : '20px 0', color :'rgb(194, 16, 194)'}}>IZREAL</h1>\r\n      <input \r\n        type=\"text\" \r\n        value={url} \r\n        onChange={handleUrlChange} \r\n        placeholder=\"YouTube 영상 URL을 입력해주세요.\" \r\n      />\r\n      <button onClick={handlePrediction} disabled={loading}>\r\n        {loading ? '로딩 중...' : '딥페이크 여부 예측'}\r\n      </button>\r\n\r\n      {embedUrl && videoId && (\r\n        <iframe \r\n          width=\"100%\" \r\n          height=\"315\" \r\n          src={`https://www.youtube.com/embed/${videoId}`} \r\n          title=\"YouTube video\" \r\n          frameBorder=\"0\" \r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n          allowFullScreen\r\n        />\r\n      )}\r\n\r\n      {prediction && <p>{prediction}</p>}\r\n\r\n      {realScore !== null && fakeScore !== null && (\r\n        <div>\r\n          <Pie data={chartData} />\r\n          <p>👍 진짜 영상 점수 : {realScore.toFixed(3)}</p>\r\n          <p>👎 가짜 영상 점수 : {fakeScore.toFixed(3)}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* ✅ 투표 팝업 */}\r\n      {showPopup && videoId && (\r\n        <VotePopup videoId={videoId} onClose={() => setShowPopup(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}