{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\final\\\\final\\\\frontend\\\\src\\\\VotePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VotePopup = ({\n  videoId,\n  onClose\n}) => {\n  _s();\n  const [vote, setVote] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleVote = async isDeepfake => {\n    setVote(isDeepfake);\n    try {\n      const response = await fetch(\"http://localhost:8000/vote/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          video_id: videoId,\n          user_id: \"test_user\",\n          // 실제 사용자 ID가 있으면 넣기\n          vote: isDeepfake\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(`투표 완료: ${isDeepfake ? \"딥페이크\" : \"진짜\"}로 선택됨`);\n      } else {\n        setMessage(`투표 실패: ${data.message || \"서버 오류 발생\"}`);\n      }\n    } catch (error) {\n      setMessage(\"서버 연결 오류\");\n    }\n\n    // 투표 완료 후 1초 후 팝업 닫기\n    setTimeout(() => {\n      onClose();\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774 \\uC601\\uC0C1\\uC774 \\uB525\\uD398\\uC774\\uD06C\\uB77C\\uACE0 \\uC0DD\\uAC01\\uD558\\uC2DC\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleVote(true),\n      children: \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleVote(false),\n      children: \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(VotePopup, \"m6zryCbADtMPzM5stegVcQF7Qfk=\");\n_c = VotePopup;\nexport default VotePopup;\nvar _c;\n$RefreshReg$(_c, \"VotePopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VotePopup","videoId","onClose","_s","vote","setVote","message","setMessage","handleVote","isDeepfake","response","fetch","method","headers","body","JSON","stringify","video_id","user_id","data","json","ok","error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/projects/final/final/frontend/src/VotePopup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst VotePopup = ({ videoId, onClose }) => {\r\n    const [vote, setVote] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleVote = async (isDeepfake) => {\r\n        setVote(isDeepfake);\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/vote/\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    video_id: videoId,\r\n                    user_id: \"test_user\", // 실제 사용자 ID가 있으면 넣기\r\n                    vote: isDeepfake\r\n                })\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (response.ok) {\r\n                setMessage(`투표 완료: ${isDeepfake ? \"딥페이크\" : \"진짜\"}로 선택됨`);\r\n            } else {\r\n                setMessage(`투표 실패: ${data.message || \"서버 오류 발생\"}`);\r\n            }\r\n        } catch (error) {\r\n            setMessage(\"서버 연결 오류\");\r\n        }\r\n\r\n        // 투표 완료 후 1초 후 팝업 닫기\r\n        setTimeout(() => {\r\n            onClose();\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <h2>이 영상이 딥페이크라고 생각하시나요?</h2>\r\n            <button onClick={() => handleVote(true)}>Yes</button>\r\n            <button onClick={() => handleVote(false)}>No</button>\r\n            <p>{message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VotePopup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,UAAU,GAAG,MAAOC,UAAU,IAAK;IACrCJ,OAAO,CAACI,UAAU,CAAC;IACnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,QAAQ,EAAEhB,OAAO;UACjBiB,OAAO,EAAE,WAAW;UAAE;UACtBd,IAAI,EAAEK;QACV,CAAC;MACL,CAAC,CAAC;MAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAIV,QAAQ,CAACW,EAAE,EAAE;QACbd,UAAU,CAAC,UAAUE,UAAU,GAAG,MAAM,GAAG,IAAI,OAAO,CAAC;MAC3D,CAAC,MAAM;QACHF,UAAU,CAAC,UAAUY,IAAI,CAACb,OAAO,IAAI,UAAU,EAAE,CAAC;MACtD;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZf,UAAU,CAAC,UAAU,CAAC;IAC1B;;IAEA;IACAgB,UAAU,CAAC,MAAM;MACbrB,OAAO,CAAC,CAAC;IACb,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,oBACIH,OAAA;IAAKyB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B9B,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,IAAI,CAAE;MAAAiB,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrD9B,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,KAAK,CAAE;MAAAiB,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrD9B,OAAA;MAAA0B,QAAA,EAAInB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA1CIH,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}